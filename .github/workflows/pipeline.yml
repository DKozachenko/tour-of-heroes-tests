name: Tour of heroes

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: ['develop']
  push:
    branches: ['develop']

permissions:
  contents: read
  actions: read
  checks: write
  issues: read
  pull-requests: write

env:
  NODE_MODULES_PATH: "./node_modules"

  UNIT_COVERAGE_PATH: "./coverage"
  UNIT_TEST_RESULTS_PATH: "./report/test-results.xml"

  E2E_HTML_REPORT_PATH: "./e2e/html-report"
  E2E_OUTPUT_PATH: "./e2e/test-output"
  E2E_TEST_RESULTS_PATH: "./e2e/report/test-results.xml"

jobs:
  create-cache-key:
    name: Create cache key
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.create-cache-key.outputs.key }}
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Output cache key
        id: create-cache-key
        run: echo "key=${{github.repository}}-${{github.ref}}-${{ hashFiles('package-lock.json') }}" >> $GITHUB_OUTPUT

  cache-deps:
    name: Cache dependencies
    needs: [create-cache-key]
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Cache (save) node modules
        uses: actions/cache/save@v4
        with:
          path: ${{ env.NODE_MODULES_PATH }}
          key: "${{needs.create-cache-key.outputs.cache-key}}"

  test-unit:
    name: Run unit tests
    needs: [create-cache-key, cache-deps]
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Restore node modules
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.NODE_MODULES_PATH }}
          key: "${{needs.create-cache-key.outputs.cache-key}}"
          fail-on-cache-miss: true
      - name: Run tests
        run: npm run test:unit:ci

  test-unit-coverage:
    name: Create unit tests coverage report
    needs: [create-cache-key, cache-deps]
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Restore node modules
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.NODE_MODULES_PATH }}
          key: "${{needs.create-cache-key.outputs.cache-key}}"
          fail-on-cache-miss: true
      - name: Run unit tests with coverage
        run: npm run test:unit:coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: ${{ env.UNIT_COVERAGE_PATH }}
          if-no-files-found: error
          retention-days: 3

  test-unit-report:
    name: Create unit tests results report
    needs: [create-cache-key, cache-deps]
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Restore node modules
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.NODE_MODULES_PATH }}
          key: "${{needs.create-cache-key.outputs.cache-key}}"
          fail-on-cache-miss: true
      - name: Run unit tests with results
        run: npm run test:unit:report
      - name: Create test results report check
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Show unit tests results
          path: ${{ env.UNIT_TEST_RESULTS_PATH }}
          reporter: jest-junit
      - name: Create test results annotations, PR comment and workflow summary
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            ${{ env.UNIT_TEST_RESULTS_PATH }}
          comment_title: "Unit Test Results"
          job_summary: true
          check_run: false

  test-e2e:
    name: Run e2e tests
    needs: [create-cache-key, test-unit, test-unit-coverage, test-unit-report]
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Restore node modules
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.NODE_MODULES_PATH }}
          key: "${{needs.create-cache-key.outputs.cache-key}}"
          fail-on-cache-miss: true
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Run tests
        run: npm run test:e2e:ci
      - name: Upload output files if exist
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-output
          path: ${{ env.E2E_OUTPUT_PATH }}
          if-no-files-found: ignore
          retention-days: 3

  test-e2e-report:
    name: Create e2e tests report
    needs: [create-cache-key, test-unit, test-unit-coverage, test-unit-report]
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Restore node modules
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.NODE_MODULES_PATH }}
          key: "${{needs.create-cache-key.outputs.cache-key}}"
          fail-on-cache-miss: true
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Run e2e tests with html report
        run: npm run test:e2e:report
      - name: Upload html report
        uses: actions/upload-artifact@v4
        with:
          name: e2e-html-report
          path: ${{ env.E2E_HTML_REPORT_PATH }}
          if-no-files-found: error
          retention-days: 3
      - name: Create test results annotations, PR comment and workflow summary
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            ${{ env.E2E_TEST_RESULTS_PATH }}
          comment_title: "E2E Test Results"
          job_summary: true
          check_run: false
